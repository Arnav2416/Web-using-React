{"version":3,"sources":["Component/LoadingComponent.js","shared/baseUrl.js","Component/HomeComponent.js","Component/MenuComponent.js","Component/ContactComponent.js","Component/AboutComponent.js","Component/DishdetailComponent.js","Component/HeaderComponent.js","Component/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","Component/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leadersErrMess","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderLeader","key","tag","left","object","body","heading","About","leaders","title","list","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","outline","isOpen","toggle","React","RenderComments","comments","cmnts","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderDish","top","DishDetail","errMss","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","href","height","navbar","innerRef","input","Footer","dishesFailed","payload","addDishes","addComments","promosLoading","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","leaderErrMess","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b275197.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n\n      return (\n            <div className= 'col-12'>\n                <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\n                <p>Loading . . .</p>\n            </div>\n      );\n};\n"," export const baseUrl = 'http://localhost:3001/'\n","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n  if (isLoading) {\n       return(\n               <Loading />\n       );\n   }\n   else if (errMess) {\n       return(\n               <h4>{errMess}</h4>\n       );\n   }\n   else\n    return(\n\n              <FadeTransform\n                  in\n                  transformProps={{\n                      exitTransform: 'scale(0.5) translateY(-50%)'\n                  }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                    <CardTitle>{item.name}</CardTitle>\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                    <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n        </FadeTransform>\n    );\n\n}\n\n function Home(props){\n\n        return(\n            <div className=\"container\">\n              <div className=\"row align-items-start\">\n                  <div className=\"col-12 col-md m-1\">\n                      <RenderCard item={props.dish} isLoading={props.dishesLoading}\n                                  errMess={props.dishesErrMess}/>\n                  </div>\n                  <div className=\"col-12 col-md m-1\">\n                      <RenderCard item={props.promotion}\n                      isLoading={props.promoLoading}\n                      errMess={props.promoErrMess} />\n                  </div>\n                  <div className=\"col-12 col-md m-1\">\n                      <RenderCard item={props.leader}\n                      isLoading={props.leadersLoading}\n                      errMess={props.leadersErrMess}\n                      />\n                  </div>\n              </div>\n          </div>\n\n    );\n }\n export default Home;\n","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, \n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\n  function RenderMenuItem({ dish, onClick}) {\n\n    return (\n\n        <Card>\n              <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n              </Link>\n        </Card>\n\n    );\n\n  }\n\n  const Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n           return (\n             <div className=\"col-12 col-md-5 m-1\">\n                <RenderMenuItem dish={dish} onClick={props.onClick} />\n             </div>\n           );\n       });\n       if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errMess) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n              return (\n\n                <div className=\"container\">\n                   <div className=\"row\">\n                       <Breadcrumb>\n                          <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                          <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                      {menu}\n                    </div>\n                </div>\n\n              );\n\n  }\nexport default Menu;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n            Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Form, Errors} from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n  constructor(props) {\n      super(props);\n\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n\n  }\n\n\n   handleSubmit(values) {\n\n       this.props.resetFeedbackForm();\n       this.props.postFeedback(\n        values.firstname,\n        values.lastname,\n        values.telnum,\n        values.email,\n        values.agree,\n        values.contactType,\n        values.message\n      );\n   }\n\n  render() {\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                     <Breadcrumb>\n                         <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                         <BreadcrumbItem active>Contact us</BreadcrumbItem>\n                     </Breadcrumb>\n                     <div className=\"col-12\">\n                         <h3>Contact Us</h3>\n                         <hr />\n                     </div>\n                </div>\n                <div className=\"row row-content\">\n                 <div className=\"col-12\">\n                    <h3>Send us your Feedback</h3>\n                 </div>\n                  <div className=\"col-12 col-md-9\">\n\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                      required, minLength: minLength(3), maxLength: maxLength(15)\n                                      }}\n                                     />\n                                     <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                     />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                            <Col md={10}>\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\"\n                                    className=\"form-control\"\n                                    validators={{\n                                         required, minLength: minLength(3), maxLength: maxLength(15)\n                                     }}\n                                     />\n                                     <Errors\n                                      className=\"text-danger\"\n                                      model=\".lastname\"\n                                      show=\"touched\"\n                                      messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be greater than 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                      }}\n                                      />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                            <Col md={10}>\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\"\n                                    className=\"form-control\"\n                                    validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                     />\n                               <Errors\n                                   className=\"text-danger\"\n                                   model=\".telnum\"\n                                   show=\"touched\"\n                                   messages={{\n                                       required: 'Required',\n                                       minLength: 'Must be greater than 2 numbers',\n                                       maxLength: 'Must be 15 numbers or less',\n                                       isNumber: 'Must be a number'\n                                   }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                            <Col md={10}>\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\"\n                                    className=\"form-control\"\n                                    validators={{\n                                           required, validEmail\n                                       }}\n                                    />\n                                    <Errors\n                                       className=\"text-danger\"\n                                       model=\".email\"\n                                       show=\"touched\"\n                                       messages={{\n                                           required: 'Required',\n                                           validEmail: 'Invalid Email Address'\n                                       }}\n                                    />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Col md={{size: 6, offset: 2}}>\n                                <div className=\"form-check\">\n                                    <Label check>\n                                        <Control.checkbox model=\".agree\" name=\"agree\"\n                                            className=\"form-check-input\"\n                                             /> {' '}\n                                            <strong>May we contact you?</strong>\n                                    </Label>\n                                </div>\n                            </Col>\n                            <Col md={{size: 3, offset: 1}}>\n                                <Control.select model=\".contactType\" name=\"contactType\"\n                                    className=\"form-control\">\n                                    <option>Tel.</option>\n                                    <option>Email</option>\n                                </Control.select>\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                            <Col md={10}>\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                    rows=\"12\"\n                                    className=\"form-control\" />\n                            </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                            <Col md={{size:10, offset: 2}}>\n                                <Button type=\"submit\" color=\"primary\">\n                                Send Feedback\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                  </div>\n             </div>\n          </div>\n    );\n  }\n\n}\n\nexport default Contact;\n","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Media, CardBody, CardHeader,} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { Fade, Stagger } from \"react-animation-components\";\nimport { baseUrl } from \"../shared/baseUrl\"\n\n\nfunction RenderLeader({ leader }) {\n  return (\n    <Stagger in>\n    <div className=\"col-12 md-5 \" key={leader.id}>\n      <Fade in>\n      <Media tag=\"li\">\n        <Media left>\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\n        </Media>\n        <Media body className=\"ml-5\">\n          <Media heading>{leader.name}</Media>\n          <p>{leader.designation}</p>\n          <p>{leader.description}</p>\n        </Media>\n      </Media>\n     </Fade>\n    </div>\n  </Stagger>\n  );\n}\n\nfunction About(props) {\n\n\n  const leaders = props.leaders.leaders.map((leader) => {\n     return (\n         <RenderLeader leader={leader} />\n     );\n });\n if (props.leaders.isLoading) {\n      return(\n          <div className=\"container\">\n              <div className=\"row\">\n                  <Loading />\n              </div>\n          </div>\n      );\n  }\n  else if (props.leaders.errMess) {\n      return(\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-12\">\n                      <h4>{props.leaders.errMess}</h4>\n                  </div>\n              </div>\n          </div>\n      );\n  }\n  else\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Media>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Media>\n                </div>\n                <div className=\"col-12\">\n                    <Media>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Media>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n\n                <div className=\"col-12\">\n\n                    <Media list>\n                        {leaders}\n                    </Media>\n\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default About;\n","import React  from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, FormGroup, Label, ModalBody} from 'reactstrap'\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\nconst minLength = (len) => (val) => (val) && (val.length>=len);\n\nclass CommentForm extends React.Component {\n\n      constructor(props){\n        super(props);\n        this.state = {\n\n          isModalOpen: false\n        };\n          this.handleSubmit = this.handleSubmit.bind(this);\n          this.toggleModal = this.toggleModal.bind(this);\n\n }\n\n toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n      this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n      this.toggleModal();\n\n  }\n\n  render () {\n      return (\n      <>\n        <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span>Submit Comments</Button>\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n            <ModalHeader isOpen={this.state.isModalOpen} toggle={this.toggleModal}>Submit Comment</ModalHeader>\n            <ModalBody>\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\n                <FormGroup className=\"form-group\">\n                    <Label htmlFor=\"rating\" md={2}>Rating</Label>\n                        <Control.select model=\".rating\" id=\"rating\" name=\"firstname\"\n                            className=\"form-control\">\n                                <option>{1}</option>\n                                <option>{2}</option>\n                                <option>{3}</option>\n                                <option>{4}</option>\n                                <option>{5}</option>\n                            </Control.select>\n                </FormGroup>\n                <FormGroup className='form-group'>\n                                <Label htmlFor='author' >Your name</Label>\n                                <Control.text model='.author' id='author' name='author' placeholder='Your name'\n                                    className='form-control'\n                                    validators={{maxLength: maxLength(15),minLength: minLength(3)}}/>\n                                <Errors\n                                className='text-danger'\n                                model='.author'\n                                show='touched'\n                                messages={{\n                                    maxLength: 'Must be 15 characters or less',\n                                    minLength: 'Must be greater than 2 characters'\n                                }}\n                                />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor='comment' md={2}>Comment</Label>\n                                <Control.textarea model='.comment' id='comment' name='comment'\n                                    rows=\"6\"\n                                    className='form-control' />\n                            </FormGroup>\n                            <FormGroup>\n                                <Button type='submit' color=\"primary\">Submit</Button>\n                            </FormGroup>\n              </LocalForm>\n            </ModalBody>\n        </Modal>\n    </>\n);\n  }\n\n}\n\n   function RenderComments({comments, postComment, dishId}){\n\n     if (comments == null) {\n           return (<div></div>)\n       }\n\n       const cmnts = comments.map(comment => {\n           return (\n\n               <li key={comment.id}>\n\n                   <p>{comment.comment}</p>\n                   <p>-- {comment.author},\n                   &nbsp;\n                   {new Intl.DateTimeFormat('en-US', {\n                           year: 'numeric',\n                           month: 'long',\n                           day: '2-digit'\n                       }).format(new Date(Date.parse(comment.date)))}\n                   </p>\n\n               </li>\n\n           )\n\n\n       })\n       return (\n          <Stagger in>\n            <div className=\"col-12 col-md-5 m-1\">\n\n               <h4> Comments </h4>\n               <Fade in>\n               <ul className='list-unstyled'>\n                   {cmnts}\n               </ul>\n                 </Fade>\n                 <CommentForm dishId={dishId} postComment={postComment}/>\n\n           </div>\n           </Stagger>\n       )\n\n\n   }\n\n   function RenderDish({dish}) {\n\n\n       return(\n          <div className=\"col-12 col-md-5 m-1\">\n          <FadeTransform\n              in\n              transformProps={{\n                  exitTransform: 'scale(0.5) translateY(-50%)'\n              }}>\n               <Card>\n                   <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                   <CardBody>\n                     <CardTitle>{dish.name}</CardTitle>\n                     <CardText>{dish.description}</CardText>\n                   </CardBody>\n               </Card>\n            </FadeTransform>\n           </div>\n       );\n\n   }\n   const DishDetail = (props) => {\n        if(props.isLoading) {\n           return(\n                <div className='container'>\n                    <div className='row'>\n                        <Loading />\n                    </div>\n                </div>\n           );\n        }\n         else if (props.errMess) {\n           return (\n               <div className='container'>\n                   <div className='row'>\n                       <h4>{props.errMss}</h4>\n                   </div>\n               </div>\n             );\n         }\n        else if (props.dish != null) {\n            return (\n            <div className=\"container\">\n                <div className=\"row\">\n                       <Breadcrumb>\n                           <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                           <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                       </Breadcrumb>\n                       <div className=\"col-12\">\n                           <h3>{props.dish.name}</h3>\n                           <hr />\n                       </div>\n                  </div>\n                <div className=\"row\">\n                  <RenderDish dish ={props.dish} />\n                   <RenderComments comments = {props.comments}\n                        postComment= {props.postComment}\n                        dishId = {props.dish.id}/>\n\n                </div>\n            </div>\n            )\n        }\n        else{\n\n      return (\n             <div>\n            </div>\n          );\n         }\n\n  }\n\n\nexport default DishDetail;\n","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n\n      this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n      };\n      this.toggleNav = this.toggleNav.bind(this);\n      this.toggleModal = this.toggleModal.bind(this);\n      this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n\n      this.setState({\n          isNavOpen: !this.state.isNavOpen\n      });\n\n    }\n\n    toggleModal() {\n       this.setState({\n         isModalOpen: !this.state.isModalOpen\n       });\n     }\n\n     handleLogin(event) {\n       this.toggleModal();\n       alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n           + \" Remember: \" + this.remember.checked);\n       event.preventDefault();\n\n   }\n\n  render() {\n\n      return(\n\n          <React.Fragment>\n          <div>\n          <Navbar dark expand=\"md\">\n            <div className=\"container\">\n              <NavbarToggler onClick={this.toggleNav} />\n                <NavbarBrand className=\"mr-auto\" href=\"/\">\n                <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\n                </NavbarBrand>\n                  <Collapse isOpen={this.state.isNavOpen} navbar>\n                      <Nav navbar>\n                      <NavItem>\n                          <NavLink className=\"nav-link\"  to='/home'>\n                          <span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                      </NavItem>\n                      <NavItem>\n                          <NavLink className=\"nav-link\" to='/aboutus'>\n                          <span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                      </NavItem>\n                      <NavItem>\n                          <NavLink className=\"nav-link\"  to='/menu'>\n                          <span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                      </NavItem>\n                      <NavItem>\n                          <NavLink className=\"nav-link\" to='/contactus'>\n                          <span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                      </NavItem>\n                      </Nav>\n                          <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                                </NavItem>\n                          </Nav>\n                  </Collapse>\n              </div>\n          </Navbar>\n          <Jumbotron>\n              <div className=\"container\">\n                  <div className=\"row row-header\">\n                      <div className=\"col-12 col-sm-6\">\n                          <h1>Angrezi Khaana</h1>\n                          <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                      </div>\n                  </div>\n              </div>\n          </Jumbotron>\n              <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                  <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                  <ModalBody>\n                      <Form onSubmit={this.handleLogin}>\n                               <FormGroup>\n                                   <Label htmlFor=\"username\">Username</Label>\n                                   <Input type=\"text\" id=\"username\" name=\"username\"\n                                       innerRef={(input) => this.username = input} />\n                               </FormGroup>\n                               <FormGroup>\n                                   <Label htmlFor=\"password\">Password</Label>\n                                   <Input type=\"password\" id=\"password\" name=\"password\"\n                                       innerRef={(input) => this.password = input}  />\n                               </FormGroup>\n                               <FormGroup check>\n                                   <Label check>\n                                       <Input type=\"checkbox\" name=\"remember\"\n                                       innerRef={(input) => this.remember = input}  />\n                                       Remember me\n                                   </Label>\n                               </FormGroup>\n                               <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                           </Form>\n                  </ModalBody>\n              </Modal>\n      </div>\n          </React.Fragment>\n\n      );\n\n  }\n\n}\nexport default Header;\n"," import React from 'react';\n import { Link } from 'react-router-dom';\n\n\n  function Footer(props){\n\n      return(\n\n        <div className=\"footer\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4 offset-1 col-sm-2\">\n                            <h5>Links</h5>\n                            <ul className=\"list-unstyled\">\n                              <li><Link to='/home'>Home</Link></li>\n                              <li><Link to='/aboutus'>About Us</Link></li>\n                              <li><Link to='/menu'>Menu</Link></li>\n                              <li><Link to='/contactus'>Contact Us</Link></li>\n                            </ul>\n                        </div>\n                        <div className=\"col-7 col-sm-5\">\n                            <h5>Our Address</h5>\n                            <address>\n        \t\t              121, Clear Water Bay Road<br />\n        \t\t              Clear Water Bay, Kowloon<br />\n        \t\t              HONG KONG<br />\n        \t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n        \t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n        \t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                 Angrezi_khaana@food.net</a>\n                            </address>\n                        </div>\n                        <div className=\"col-12 col-sm-4 align-self-center\">\n                            <div className=\"text-center\">\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                                <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                                <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                                <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <p>© Copyright 2018 Angrezi khaana</p>\n                        </div>\n                    </div>\n                </div>\n          </div>\n      )\n\n  }\n  export default Footer;\n","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n      const newComment = {\n          dishId: dishId,\n          rating: rating,\n          author: author,\n          comment: comment\n      }\n      newComment.date = new Date().toISOString();\n\n      return fetch(baseUrl + 'comments', {\n\n            method: 'POST',\n            body: JSON.stringify(newComment),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            credentials: 'same-origin'\n      })\n      .then( response => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n      },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n      .then(response => response.json())\n      .then(response => dispatch(addComment(response)))\n    .catch(error =>  { console.log('post comments', error.message);\n    alert('Your comment could not be posted\\nError: '+error.message); });\n\n};\n\nexport const fetchDishes = () => (dispatch) => {\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n    .then( response => {\n      if (response.ok) {\n          return response;\n      }\n      else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n    },\n      error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(dishes => dispatch(addDishes(dishes)))\n    .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n\n});\n\nexport const dishesFailed = (errMess) => ({\n      type: ActionTypes.DISHES_FAILED,\n      payload: errMess\n\n});\n\nexport const addDishes = (dishes) => ({\n      type: ActionTypes.ADD_DISHES,\n      payload: dishes\n\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n          if (response.ok) {\n              return response;\n          }\n          else {\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\n              error.response = response;\n              throw error;\n          }\n        },\n          error => {\n              var errmess = new Error(error.message);\n              throw errmess;\n    })\n            .then(response => response.json())\n            .then(comments => dispatch(addComments(comments)))\n            .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const commentsFailed = (errMess) => ({\n      type: ActionTypes.COMMENTS_FAILED,\n      payload: errMess\n\n});\n\nexport const addComments = (comments) => ({\n      type: ActionTypes.ADD_COMMENTS,\n      payload: comments\n\n});\n\n\n\n\nexport const fetchPromos = () => (dispatch) => {\n\n     dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n          .then(response => {\n            if (response.ok) {\n                return response;\n            }\n            else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n          },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n          })\n            .then(response => response.json())\n            .then(promos => dispatch(addPromos(promos)))\n            .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n\n});\n\nexport const promosFailed = (errMess) => ({\n      type: ActionTypes.PROMOS_FAILED,\n      payload: errMess\n\n});\n\nexport const addPromos = (promos) => ({\n      type: ActionTypes.ADD_PROMOS,\n      payload: promos\n\n});\n\n\nexport const fetchLeaders = () => (dispatch) => {\n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n    .then( response => {\n      if (response.ok) {\n          return response;\n      }\n      else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n      }\n    },\n      error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n\n});\n\nexport const leadersFailed = (errMess) => ({\n      type: ActionTypes.LEADERS_FAILED,\n      payload: errMess\n\n});\n\nexport const addLeaders = (leaders) => ({\n      type: ActionTypes.ADD_LEADERS,\n      payload: leaders\n\n});\n\n\n\n\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message ) => (dispatch) => {\n\n  const newFeedback = {\n      firstname:firstname,\n      lastname: lastname,\n      telnum: telnum,\n      email: email,\n      agree: agree,\n      contactType: contactType,\n      message: message\n  }\n      return fetch(baseUrl + 'feedback', {\n\n            method: 'POST',\n            body: JSON.stringify(newFeedback),\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            credentials: 'same-origin'\n      })\n      .then( response => {\n        if (response.ok) {\n            return response;\n        }\n        else {\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\n            error.response = response;\n            throw error;\n        }\n      },\n        error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n      .then(response => response.json())\n      .then(response =>\n        alert(\"Thank you for your feedback!\" + JSON.stringify(response))\n      )\n    .catch(error =>  { console.log('post Feedback', error.message);\n    alert('Your form could not be posted\\nError: '+error.message); });\n\n};\n","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\nexport const ADD_LEADERS = 'ADD_LEADERS';\n","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  }\n}\n\nconst mapDispatchToProps  = (dispatch) => ({\n    postComment: (dishId, rating, author, comment) =>\n    dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () =>  dispatch(fetchComments()),\n    fetchPromos: () =>  dispatch(fetchPromos()),\n    fetchLeaders: () =>  dispatch(fetchLeaders()),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message ) =>\n      dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message ))\n});\n\nclass Main extends Component {\n\n\ncomponentDidMount() {\n\n  this.props.fetchDishes();\n  this.props.fetchComments();\n  this.props.fetchPromos();\n  this.props.fetchLeaders();\n}\n\nrender() {\n\n  const HomePage = () => {\n      return(\n          <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                dishesLoading={this.props.dishes.isLoading}\n                dishErrMess={this.props.dishes.errMess}\n                promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                promoLoading={this.props.promotions.isLoading}\n                promoErrMess={this.props.promotions.errMess}\n                leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                leadersLoading={this.props.leaders.isLoading}\n                leaderErrMess={this.props.leaders.errMess}\n          />\n      );\n    }\n\n    const DishWithId = ({match}) => {\n          return (\n            <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n            isLoading={this.props.dishes.isLoading}\n            errMess={this.props.dishes.errMess}\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n            commentsErrMess={this.props.comments.errMess}\n            postComment={this.props.postComment}\n\n          />\n        );\n    }\n\n\n\n  return (\n    <div>\n      <Header />\n      <TransitionGroup>\n        <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n          <Switch>\n                <Route path='/home' component={HomePage} />\n                <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n                <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />}/>\n                <Route path='/menu/:dishId' component={DishWithId} />\n                <Route exact path='/contactus' component={() => <Contact resetFeedbackForm ={this.props.resetFeedbackForm} postFeedback = {this.props.postFeedback} />}/>\n                <Redirect to=\"/home\" />\n          </Switch>\n        </CSSTransition>\n      </TransitionGroup>\n      <Footer />\n    </div>\n\n  );\n}\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n      isLoading: true,\n      errMess: null,\n      dishes: []\n      },action) => {\n      switch(action.type) {\n          case ActionTypes.ADD_DISHES:\n                return{...state, isLoading: false, errMess: null, dishes: action.payload};\n\n          case ActionTypes.DISHES_LOADING:\n                return{...state, isLoading: true, errMess: null, dishes: []};\n\n          case ActionTypes.DISHES_FAILED:\n                return{...state, isLoading: false, errMess: action.payload, dishes: []};\n\n\n          default:\n              return state;\n      }\n}\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comments: []\n        }, action) => {\n    switch(action.type) {\n      case ActionTypes.ADD_COMMENTS:\n            return{...state, errMess: null, comments: action.payload};\n\n      case ActionTypes.COMMENTS_FAILED:\n            return{...state, errMess: action.payload };\n\n      case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n      default:\n          return state;\n        }\n}\n","import * as ActionTypes from './ActionTypes';\n\n\nexport const Promotions = (state = {\n        isLoading: true,\n        errMess: null,\n        promotions: []\n\n        }, action) => {\n      switch(action.type) {\n        case ActionTypes.ADD_PROMOS:\n              return{...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n              return{...state, isLoading: true, errMess: null, promotions: []};\n\n        case ActionTypes.PROMOS_FAILED:\n              return{...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n      }\n}\n","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n\n            isLoading: true,\n            errMess: null,\n            leaders: []\n    }, action) => {\n    switch(action.type) {\n      case ActionTypes.ADD_LEADERS:\n            return{...state, isLoading: false, errMess: null, leaders: action.payload};\n\n      case ActionTypes.LEADERS_LOADING:\n            return{...state, isLoading: true, errMess: null, leaders: []};\n\n      case ActionTypes.LEADERS_FAILED:\n            return{...state, isLoading: false, errMess: action.payload, leaders: []};\n\n\n      default:\n          return state;\n    }\n\n}\n","export const InitialFeedback = {\n    firstname: '',\n    lastname:'',\n    telnum: '',\n    email:'',\n    agree: false,\n    contactType:'Tel.',\n    message:''\n}\n","import React, { Component } from 'react';\nimport Main from './Component/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\nrender() {\n  return (\n<Provider store={store}>\n  <BrowserRouter>\n      <div className=\"App\">\n        <Main />\n      </div>\n  </BrowserRouter>\n</Provider>\n  );\n}\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createForms } from 'react-redux-form';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            leaders: Leaders,\n            promotions: Promotions,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}